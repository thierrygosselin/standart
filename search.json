[{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"macos","dir":"Articles","previous_headings":"","what":"macOS","title":"RADseq Genomics in R","text":"Warning: package management software Homebrew /MacPorts : experience packages point unreliable genomic software installation. might trick software, eventually lose lot time trying figure ’s problem. vignette present brewless options .","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"update-your-os","dir":"Articles","previous_headings":"macOS","what":"Update your OS","title":"RADseq Genomics in R","text":"current version macOS Ventura 13.0 update","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"get-administrator-and-root-user-access","dir":"Articles","previous_headings":"macOS","what":"Get administrator and root user access","title":"RADseq Genomics in R","text":"Make sure administrator root user access computer .","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"apples-command-line-tools","dir":"Articles","previous_headings":"macOS","what":"Apple’s Command Line Tools","title":"RADseq Genomics in R","text":"Make sure ’s installed…, follow instructions. Although prompt message may bit confusing, just click install. Notes: command line tools already installed ’ll get message xcode-select: error: command line tools already installed, use \"Software Update\" install updates test compiler, can also type: make terminal, ’s installed something similar *** targets specified makefile found.  Stop. Terminology: Reading: understand basic steps install software terminal (configure, make sudo make install steps) ./configure: configure everything installation make: connect libraries source make install (doc) make install: use build (compile) source code create binary files install application system configured using ./configure, usually /usr/local/bin.","code":"xcode-select --install"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"compiler","dir":"Articles","previous_headings":"macOS","what":"Compiler","title":"RADseq Genomics in R","text":"Apple can’t ship GNU Compiler Collection (GCC) OpenMP enabled, similar story Clang compiler used macOS. Consequently, need updateed manually want run software ues parallel computing (like stacks). command fro GCC Clang : change directory downloads download compiler’s binaries uncompress move folders (bin, include, lib, libexec share) compiler computer /usr/local directory. remove downloaded file check version gcc","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"update-gcc","dir":"Articles","previous_headings":"macOS > Compiler","what":"Update GCC","title":"RADseq Genomics in R","text":"Choose binary version number based OS change version accordingly link. Ventura Monterey gcc-11.2-bin.tar.gz","code":"#In Terminal cd Downloads sudo tar -zxvf gcc-11.2-bin.tar.gz -C /usr/local --strip-components=2 sudo rm gcc-11.2-bin.tar.gz gcc -v"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"update-clang","dir":"Articles","previous_headings":"macOS > Compiler","what":"Update Clang","title":"RADseq Genomics in R","text":"want clang compiler OpenMP enabled. latest version 15.0.3.","code":"#In browser https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.3/clang+llvm-15.0.3-x86_64-apple-darwin.tar.xz #In Terminal cd Downloads sudo tar -xzvf clang+llvm-15.0.3-x86_64-apple-darwin.tar.xz -C/usr/local --strip-components=1 sudo rm clang+llvm-15.0.3-x86_64-apple-darwin.tar.xz clang -v"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"path","dir":"Articles","previous_headings":"macOS","what":"PATH","title":"RADseq Genomics in R","text":"shell start script PATH programs** make things little easier talk computer, time open Terminal shell start scripts tells computer look programs. path programs can modified shell start script. computer searching programs, looks path: output look like : /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin. sometimes, also say: file directory (worries, see ). Use pwd command know exactly ! name shell startup file differs across platforms. Depending OS called ~/.bash_profile sometimes ~/.profile. Filename beginning dot “.” reserved system invisible mac Finder. Find shell start script following command: returns nothing (blank), don’t shell start script. Create one command modify, can use BBEdit open make modify hidden items (using option Show hidden items open file screen). Look free version. Linux, use Vi! Copy/paste line .bash_profile file: modifying shell start script always run command source ~/.bash_profile reload .","code":"$PATH ls -al ~ | grep profile sudo touch $HOME/.bash_profile PATH=\"$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin\""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"useful-tools","dir":"Articles","previous_headings":"macOS","what":"Useful tools","title":"RADseq Genomics in R","text":"useful essential software like mac.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"bbedit","dir":"Articles","previous_headings":"macOS > Useful tools","what":"BBEdit","title":"RADseq Genomics in R","text":"TextWrangler replacement free text editor help save time. installed, go Apple Menu bar -> BBEdit -> Install Command Line","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"pip","dir":"Articles","previous_headings":"macOS > Useful tools","what":"pip","title":"RADseq Genomics in R","text":"Python installer tool highly recommend. install upgrade pip, securely download get-pip.py. Run Terminal: get command found might python installed.","code":"cd ~/Downloads sudo python get-pip.py pip install -U pip   # to upgrade sudo rm -R ~/Downloads/get-pip.py # to remove the downloaded file"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"linux","dir":"Articles","previous_headings":"","what":"Linux","title":"RADseq Genomics in R","text":"Make sure GCC CLANG OpenMP enabled. Several flavors available, check proper link","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"install-r","dir":"Articles","previous_headings":"","what":"Install R","title":"RADseq Genomics in R","text":"install R v4.2.1 “Funny-Looking Kid” released 2022-06-23 download installer follow instructions remove R completely macOS","code":"# for macOS cd Downloads curl -O https://cran.r-project.org/bin/macosx/R-4.2.1.pkg sudo rm -rf /Library/Frameworks/R.framework /Applications/R.app \\ /usr/bin/R /usr/bin/Rscript"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"rstudio","dir":"Articles","previous_headings":"","what":"Rstudio","title":"RADseq Genomics in R","text":"download RStudio, check link download installer OS.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"installing-libraries","dir":"Articles","previous_headings":"","what":"Installing Libraries","title":"RADseq Genomics in R","text":"setup computers clean macOS install. 1. Start devtools tidyverse gsl package required numerous packages can cause headaches… Don’t install source. console print : want install sources package needs compilation? (Yes//cancel). Always aswer unless course know . , install grur assigner packges higher number dependencies, way ’s installing automatically 90% packages need (including radiator).","code":"if (!require(\"devtools\")) install.packages(\"devtools\") # to install install.packages(\"tidyverse\") install.packages(\"gsl\") devtools::install_github(\"thierrygosselin/grur\") devtools::install_github(\"thierrygosselin/assigner\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"makevars-file","dir":"Articles","previous_headings":"","what":"Makevars file","title":"RADseq Genomics in R","text":"packages might compile source use different compiler sometimes useful. need tell R use compilers. might change one package another. Nothing simple, know now… done R’s Makevars file located ~/.R/Makevars. modify create file, fastest way use package usethis (’s installed automatically devtools): Makevars content required:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ FC=/usr/local/bin/gfortran F77=/usr/local/bin/gfortran PKG_LIBS = -fopenmp -lgomp PKG_CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp PKG_CXXFLAGS=-fopenmp -std=c++11 CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp SHLIB_OPENMP_CFLAGS = -fopenmp SHLIB_OPENMP_CXXFLAGS = -fopenmp SHLIB_OPENMP_FCFLAGS = -fopenmp SHLIB_OPENMP_FFLAGS = -fopenmp # change the nex line according to your computer compiler version (use gcc -v in terminal): FLIBS=-L/usr/local/lib/gcc/x86_64-apple-darwin19/9.2.0/finclude  CFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion CXXFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"Installation_problems","dir":"Articles","previous_headings":"","what":"Errors and installation problems","title":"RADseq Genomics in R","text":"Sometimes ’ll get warnings installing dependencies required x package. solve problem, delete manually problematic package installation folder (mac: /Library/Frameworks/R.framework/Resources/library) Terminal: Using latest version R, RStudio packages recommended. heart start pounding just thought install new R version, look packrat. Look output R console get error message. ’s related one’s packages dependencies, try installing separately attempting reinstall problematic package.","code":"#Warning: cannot remove prior installation of package ‘stringi’ sudo rm -R /Library/Frameworks/R.framework/Resources/library/package_name # Changing 'package_name' to the problematic package. # Reinstall the package."},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-macos-big-sur-update","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: macOS Big Sur update","title":"RADseq Genomics in R","text":"far, ’ve experience 1 problem upgrading Big Sur, ’s linked adegenet dependency sf package (solution).","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-checking-whether-the-c-compiler-works-no","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: checking whether the C++ compiler works… no","title":"RADseq Genomics in R","text":"rtying compile software get error: checking whether C++ compiler works... configure: error: C++ compiler create executables Try installing Xcode App Store.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-https-not-supported","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: “https” not supported","title":"RADseq Genomics in R","text":"get something like: https supported disabled libcurl, install re-install: OpenSSL Required GCC compiler used (TLS backend used). required clang used (securetransport backend used). curl Check latest release curl curl* option type curl -h* next step depends compiler used gcc: Note: macOS 11.0.1 give error configure: error: OpenSSL libs /directories found specified! case, use clang:","code":"#In browser https://www.openssl.org/source/openssl-1.1.1.tar.gz  #In Terminal cd ~/Downloads curl -L https://www.openssl.org/source/openssl-1.1.1.tar.gz | tar xf - cd openssl-1.1.1 ./config make -j12 #change with your number of CPU make test #long sudo make install cd .. sudo rm -R openssl* #Copy/paste in your browser https://curl.haxx.se/download/curl-7.85.0.tar.gz # Terminal cd ~/Downloads tar -zxvf curl-7.85.0.tar.gz cd curl-7.85.0 ./configure --with-ssl # to enable https via OpenSSL and using GCC CC=\"/usr/local/bin/clang\" ./configure --without-ssl #--with-darwinssl # to install via clang make -j12 #change with your number of CPU sudo make install cd .. sudo rm -R curl*"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"linux-related-problem","dir":"Articles","previous_headings":"Errors and installation problems","what":"Linux related problem","title":"RADseq Genomics in R","text":"install problem, problem might computer-specific. e.g. problem related strataG, copula /gsl, try installing libgsl0-dev Terminal (easy now latest RStudio release!):","code":"sudo apt-get install libgsl0-dev"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"Renviron","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: vector memory exhausted","title":"RADseq Genomics in R","text":"errors highlight problems vectors memory similar : vector memory exhausted (limit reached). R, verify file called ~/.Renviron: don’t file: Add .Renviron file located ~/.Renviron: can also use text editor allows see hidden files (files starting . dot).","code":"file.exists(\"~/.Renviron\") require(usethis) usethis::edit_r_environ() R_MAX_VSIZE = 100Gb"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-during-package-installation","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error during package installation","title":"RADseq Genomics in R","text":"Problem string.h, math.h .h Problem vroom Problem rmetasim example vroom installation: macOS : Makevars needs additional lines make work configuration.","code":"clang++ -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include  -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -fPIC  -Wall -g -O2 -c gen.cc -o gen.o clang++ -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include  -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -fPIC  -Wall -g -O2 -c index_collection.cc -o index_collection.o /usr/local/bin/clang -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include   -fPIC  -I/usr/local/include -c localtime.c -o localtime.o localtime.c:42:10: fatal error: 'string.h' file not found #include <string.h> ^~~~~~~~~~"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error--setmaxglobalsize","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error .setMaxGlobalSize","title":"RADseq Genomics in R","text":"problem previous version pbmcapply ’s interaction future. Solution: restart computer clean desk session: open RStudio update packages Restart R (RStudio > Session > Restart R) Re-install github package generating error Note: heart start pounding just thought update everything computer definitely look packrat: ’s easy use.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error--dynamicclustercall","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error .DynamicClusterCall","title":"RADseq Genomics in R","text":"PC ’re getting error closely related error: Solution: Use parallel.core = 1 function generating error.","code":"# Error in .DynamicClusterCall(cl, length(cl), .fun = function(.proc_idx,  : # One of the nodes produced an error: Can not open file 'FILE PATH'. The process cannot access the file because it # is being used by another process."},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"corrupt-packages","dir":"Articles","previous_headings":"Errors and installation problems","what":"Corrupt packages","title":"RADseq Genomics in R","text":"error usually happens several packages updated: Solution: restart R re-install package generated error","code":"# Error in get0(oNam, envir = ns) : # lazy-load database '/Library/Frameworks/R.framework/Versions/3.5/Resources/library/callr/R/callr.rdb' is corrupt # In addition: Warning message: # In get0(oNam, envir = ns) : internal error -3 in R_decompress1"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"Dynload","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: dyn.load","title":"RADseq Genomics in R","text":"see 2 problems separate solutions. error related adegenet, strataG, assigner packages depends sf package, see solution . error similar : Solution: R, check output command look environment variables: Note output empty, like example , write output. Set new environment variables adding /usr/local/lib/ output : ’s empty: ’s , add end, separated : Long-term solution: Instead using Sys.setenv time similar problem, add environment variables LD_LIBRARY_PATH .Renviron file. discussed another problem .","code":"Error in dyn.load(file, DLLpath = DLLpath, ...) :    unable to load shared object '/home/rstudio/R/x86_64-pc-linux-gnu-library/3.6/units/libs/units.so':   libudunits2.so.0: cannot open shared object file: No such file or directory Calls: <Anonymous> ... asNamespace -> loadNamespace -> library.dynam -> dyn.load Execution halted Sys.getenv(\"LD_LIBRARY_PATH\") # [1]\"\" # in R: Sys.setenv(LD_LIBRARY_PATH=\"/usr/local/lib/\") # For Linux you could use: /usr/local/lib/:/usr/lib64 Sys.setenv(LD_LIBRARY_PATH=\"/usr/local/lib64/R/lib:/lib:/usr/local/lib64:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b10-0.amzn2.0.1.x86_64/jre/lib/amd64/server:/usr/local/lib/:/usr/lib64\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"sfprob","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error related to sf and dyn.load","title":"RADseq Genomics in R","text":"Sometimes problem related dyn.load problems originates specific packages. far, , always linked sf package. problem macOS usually updating os, e.g. Catalina -> Big Sur. solution similar Linux try install adegenet. solutions using Homebrew, ’m fan shortcuts. brewless version execute terminal: udunits sqlite libtiff proj GDAL GEOS Back R/RStudio","code":"cd ~/Downloads curl -L https://artifacts.unidata.ucar.edu/repository/downloads-udunits/current/udunits-2.2.28.tar.gz | tar xf - cd udunits* ./configure && make -j56 && sudo make install cd .. sudo rm -R udunits* cd ~/Downloads curl -L https://www.sqlite.org/2022/sqlite-autoconf-3390400.tar.gz | tar xf - cd sqlite-autoconf* ./configure && make -j56 && sudo make install cd .. sudo rm -R sqlite-autoconf* cd ~/Downloads curl -L https://download.osgeo.org/libtiff/tiff-4.4.0.tar.gz | tar xf - cd tiff* ./configure && make -j56 && sudo make install cd .. sudo rm -R tiff* cd ~/Downloads curl -L  https://download.osgeo.org/proj/proj-9.1.0.tar.gz | tar xf - cd proj* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R proj* # with prior releases, when configure was necessary # ./configure --libdir=/usr/local/lib && make -j56 && sudo make install export LDFLAGS=\"-L/usr/local/lib\" export CPPFLAGS=\"-I/usr/local/include\"  cd ~/Downloads curl -L https://github.com/OSGeo/gdal/releases/download/v3.5.3/gdal-3.5.3.tar.gz | tar xf - cd gdal* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R gdal* # previous install command required #./configure --prefix=/usr/local --libdir=/usr/local/lib --with-proj=/usr/local && make -j56 && sudo make install #time for coffee... cd ~/Downloads git clone https://git.osgeo.org/gitea/geos/geos.git cd geos* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R geos* # previous install command required #./autogen.sh #./configure --libdir=/usr/local/lib && make -j56 && sudo make install install.packages(\"rgeos\", repos=\"http://R-Forge.R-project.org\", type=\"source\") install.packages(\"rgdal\", repos=\"http://R-Forge.R-project.org\", type=\"source\") devtools::install_github(\"r-spatial/sf\", configure.args = \"--with-proj-lib=/usr/local\") install.packages(\"adegenet\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-http-status-was-404-not-found","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: HTTP status was 404 Not Found","title":"RADseq Genomics in R","text":"error sometimes poping new R upgrade. Try installing problematic package differently. Instead : Try:","code":"BiocManager::install(\"SeqArray\") remotes::install_local(path = \"SeqArray_latest.tar.gz\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error-c-stacks-usage","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: C stacks usage","title":"RADseq Genomics in R","text":"far, haven’t found cure computer-specific problem. Potential solutions: Make sure enough RAM computer dataset want analyze (16GB bare minimum days small-medium RADseq dataset). Closing windows/app running background somtimes help. Updating latest version R, RStudio libraries. fan upgrading latest version, use Packrat. Follow guidelines prepare computer vignette, start…","code":"Error: C stack usage  7971092 is too close to the limit"},{"path":[]},{"path":[]},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"fst-fstcore-data-table","dir":"Articles","previous_headings":"Specific librairies installation","what":"fst & fstcore & data.table","title":"RADseq Genomics in R","text":"Better install compile source enable OpenMP. Install terminal zstd lz4: fstcore, fst data.table requires R Makevars specifications. lines, comment (#) saving installing source:","code":"cd ~/Downloads curl -L https://github.com/lz4/lz4/archive/refs/tags/v1.10.0.tar.gz | tar xf - cd lz4* make  sudo make install cd ..  sudo rm -R lz4* cd ~/Downloads curl -L https://github.com/facebook/zstd/archive/refs/tags/v1.5.6.tar.gz | tar xf - cd zstd* make  sudo make install cd ..  sudo rm -R zstd* usethis::edit_r_makevars() #fstcore fst data.table CC=/usr/local/bin/gcc -fopenmp CXX=/usr/local/bin/g++ -fopenmp CXX11=/usr/local/bin/g++ -fopenmp CXX14=/usr/local/bin/g++ -fopenmp CXX17=/usr/local/bin/g++ -fopenmp CXX1X=/usr/local/bin/g++ -fopenmp CXX98=/usr/local/bin/g++ -fopenmp install.packages(\"fstcore\", type = \"source\") install.packages(\"fst\", type = \"source\") install.packages(\"data.table\", type = \"source\")"},{"path":[]},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"download","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Download","title":"RADseq Genomics in R","text":"Download latest github release Allan Strand’s rmetasim","code":"cd ~/Downloads curl -L -O https://github.com/stranda/rmetasim/archive/master.zip unzip master.zip"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"modify-the-number-of-loci-maxloci","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Modify the number of loci: MAXLOCI","title":"RADseq Genomics in R","text":"want use loci simulations (default 10001), need modify rmetasim compiling. text editor, modify const.h file src folder: rmetasim-master/src/const.h. Navigate lane 33 change integer desired maximum number loci. Terminal:","code":"sed -i -e 's/#define MAXLOCI               10001/#define MAXLOCI               20000/g' rmetasim-master/src/const.h"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"Makevars_config","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Makevars configuration","title":"RADseq Genomics in R","text":"rmetasim requires Makevars (~/.R/Makevars file) specifications. lines, comment (#) compiling rmetasim: macOS latest os requires extra lines:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/clang CXX=/usr/local/bin/clang++ CXX1X=/usr/local/bin/clang++ FLIBS=-L/usr/local/lib LDFLAGS=-L/usr/local/lib SHLIB_OPENMP_CFLAGS= -fopenmp SHLIB_OPENMP_FCFLAGS= -fopenmp SHLIB_OPENMP_FFLAGS= -fopenmp SHLIB_OPENMP_CXXFLAGS= -fopenmp CFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CCFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CXXFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CPPFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"compile","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Compile","title":"RADseq Genomics in R","text":"","code":"R CMD INSTALL \"rmetasim-master\" # Terminal command sudo rm -R rmetasim* # to remove the folders no longer required"},{"path":[]},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"download-the-github-version","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Download the github version","title":"RADseq Genomics in R","text":"","code":"# terminal cd Downloads git clone --recursive https://github.com/dmlc/xgboost cd xgboost"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"error","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Error?","title":"RADseq Genomics in R","text":"’re getting error: \"https\" supported disabled libcurl, extra steps required, check installation problems section install OpenSSL curl enabling https ---ssl option.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"modification","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Modification","title":"RADseq Genomics in R","text":"Modify text editor configure file inside xgboost/R-package folder:","code":"# Go to line 1676 # change ac_pkg_openmp=no # to ac_pkg_openmp=yes #save the file under the same name"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"makevars-configuration","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Makevars configuration","title":"RADseq Genomics in R","text":"XGBoost requires Makevars specifications. lines, comment (#) compiling:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ CXX11=/usr/local/bin/g++ CXX14=/usr/local/bin/g++ CXX17=/usr/local/bin/g++ SHLIB_OPENMP_CFLAGS= -fopenmp SHLIB_OPENMP_FCFLAGS= -fopenmp SHLIB_OPENMP_FFLAGS= -fopenmp SHLIB_OPENMP_CXXFLAGS= -fopenmp CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe LDFLAGS=-L/usr/local/lib -Wl,-rpath,/usr/local/lib CPPFLAGS=-I/usr/local/include -I/usr/local/include"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"compile-1","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Compile","title":"RADseq Genomics in R","text":"","code":"sudo R CMD INSTALL R-package"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"test-r-package","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Test R-package","title":"RADseq Genomics in R","text":"see time difference runs","code":"require(xgboost) x <-  matrix(rnorm(100*10000), 10000, 100) y <-  x %*% rnorm(100) + rnorm(1000)  system.time({bst = xgboost(data = x, label = y, nthread = 1, nround = 100, verbose = FALSE)}) system.time({bst = xgboost(data = x, label = y, nthread = 4, nround = 100, verbose = FALSE)})"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"lightgbm","dir":"Articles","previous_headings":"Specific librairies installation","what":"LightGBM","title":"RADseq Genomics in R","text":"LightGBM requires OpenMP-enabled compiler. Currently, doesn’t work well clang, make sure updated GCC compiler (instructions ). Additionally, LightGBM requires CMake","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"download-and-install-cmake","dir":"Articles","previous_headings":"Specific librairies installation > LightGBM","what":"Download and install CMake","title":"RADseq Genomics in R","text":"add CMake PATH:","code":"#In browser or using curl in Terminal https://cmake.org/files/v3.12/cmake-3.12.2-Darwin-x86_64.dmg # double-click on the disk image and follow instructions PATH=\"/Applications/CMake.app/Contents/bin\":\"$PATH\" # Or, to install symlinks to '/usr/local/bin', run: sudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install # Or, to install symlinks to another directory, run: sudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install=/path/to/bin #Then, run the following commands to install LightGBM:"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"download-and-install-lightgbm","dir":"Articles","previous_headings":"Specific librairies installation > LightGBM","what":"Download and Install LightGBM","title":"RADseq Genomics in R","text":"","code":"cd Downloads git clone --recursive https://github.com/Microsoft/LightGBM cd LightGBM Rscript build_r.R # previous version required running these lines instead #cd LightGBM/R-package #export CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ #R CMD INSTALL --build . --no-multiarch"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"randomforestsrc","dir":"Articles","previous_headings":"Specific librairies installation","what":"randomForestSRC","title":"RADseq Genomics in R","text":"randomForestSRC requires GCC OpenMP-enabled compiler run parallel. See instructions already done.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"makevars-configuration-1","dir":"Articles","previous_headings":"Specific librairies installation > randomForestSRC","what":"Makevars configuration","title":"RADseq Genomics in R","text":"Check lines commented ~/.R/Makevars file:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe PKG_CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp PKG_CXXFLAGS=-fopenmp -std=c++11 FC=/usr/local/bin/gfortran F77=/usr/local/bin/gfortran LDFLAGS=-L/usr/local/lib PKG_LIBS = \"-liconv\""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"download-and-install","dir":"Articles","previous_headings":"Specific librairies installation > randomForestSRC","what":"Download and install","title":"RADseq Genomics in R","text":"Terminal run steps download compile randomForestSRC: Make sure autoconf installed: output: autoconf: error: input file, , install following steps . want make sure line printed execution previous command: checking whether OpenMP work package... yes checking /usr/local/bin/gcc option support OpenMP... -fopenmp","code":"cd ~/Downloads curl -L https://cran.r-project.org/src/contrib/randomForestSRC_2.9.3.tar.gz | tar xf - cd randomForestSRC # in Terminal cd ~/Downloads autoconf # in Terminal cd ~/Downloads/randomForestSRC autoconf cd ~/Downloads R CMD INSTALL --preclean --clean randomForestSRC"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"ranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"ranger","title":"RADseq Genomics in R","text":"ranger easy install.","code":"install.packages(\"ranger\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"missranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"missRanger","title":"RADseq Genomics in R","text":"missRanger also easy install.","code":"install.packages(\"missRanger\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"miceranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"miceRanger","title":"RADseq Genomics in R","text":"miceRanger easy install.","code":"install.packages(\"miceRanger\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"pcamethods","dir":"Articles","previous_headings":"Specific librairies installation","what":"pcaMethods","title":"RADseq Genomics in R","text":"install pcaMethods, bioconductor:","code":"BiocManager::install(\"pcaMethods\")"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"fastsimcoal2","dir":"Articles","previous_headings":"Specific librairies installation","what":"fastsimcoal2","title":"RADseq Genomics in R","text":"install fastsimcoal2 v.2.6.0.3, use grur::simulate_rad:","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"linux-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"LINUX","title":"RADseq Genomics in R","text":"","code":"curl -O http://cmpg.unibe.ch/software/fastsimcoal2/downloads/fsc26_linux64.zip unzip fsc26_linux64.zip sudo mv fsc26_linux64/fsc26 /usr/local/bin/fsc26 # will ask for your computer password"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"macos-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"MacOS","title":"RADseq Genomics in R","text":"","code":"cd ~/Downloads curl -O http://cmpg.unibe.ch/software/fastsimcoal2/downloads/fsc26_mac64.zip unzip fsc26_mac64.zip sudo mv fsc26_mac64/fsc26 /usr/local/bin/fsc26 # will ask for your computer password"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"common-to-both-os","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"Common to both OS:","title":"RADseq Genomics in R","text":"Re-start R software fastsimcoal2 automatically PATH…","code":"sudo chmod 777 /usr/local/bin/fsc26 fsc26"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"path-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"PATH","title":"RADseq Genomics in R","text":"see path installation, Terminal: doesn’t work, : Remove files folder:","code":"which fsc26 # in macOS: # /usr/local/bin/fsc26 source ~/.bash_profile sudo rm -R ~/Downloads/fsc26_mac64*"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"colony","dir":"Articles","previous_headings":"Specific librairies installation","what":"COLONY","title":"RADseq Genomics in R","text":"install COLONY 30/07/2018, V2.0.6.5:","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"macos-2","dir":"Articles","previous_headings":"Specific librairies installation > COLONY","what":"MacOS","title":"RADseq Genomics in R","text":"old openmpi version (openmpi-1.6.5) required, saddly. download COLONY, follow instructions Jinliang Wang ZSL website. file need uncompress named: colony2.mac_.20180730.zip.","code":"cd ~/Downloads curl -L https://download.open-mpi.org/release/open-mpi/v1.6/openmpi-1.6.5.tar.gz | tar xf - cd openmpi-1.6.5 export TMPDIR=/tmp ./configure F77=gfortran #--prefix=/usr/local -openmp # no longer work for some reason make -j 12 sudo make install sudo rm -R ~/Downloads/openmpi*"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"linux-2","dir":"Articles","previous_headings":"Specific librairies installation > COLONY","what":"Linux","title":"RADseq Genomics in R","text":"download COLONY, follow instructions Jinliang Wang ZSL website. file need uncompress named: colony2.linux_.20180730.zip. Several options available depending compiler installed.","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"update-github","dir":"Articles","previous_headings":"Useful","what":"Update Github","title":"RADseq Genomics in R","text":"macOS comes Github, Version Control System (VCS), pre-installed. However, install /usr/bin/git can make difficult beginners update. change , run commands: Install GNU Autoconf Install Github","code":"cd ~/Downloads curl -L http://ftp.gnu.org/gnu/autoconf/autoconf-latest.tar.gz | tar xf - cd autoconf-2.69 ./configure make sudo make install cd ..  sudo rm -R ~/Downloads/autoconf-* git --version                   # show current git version installed which git                       # returns where is git on your computer cd ~/Downloads git clone https://github.com/git/git # install the latest Git cd git make configure ./configure make -j12 sudo make install cd ..  sudo rm -R ~/Downloads/git/     # remove git folder source ~/.bash_profile          # reload startup script git --version                   # confirmed the version you just installed which git                       # returns /usr/local/bin"},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"macos-terminal-from-specific-folder","dir":"Articles","previous_headings":"Useful","what":"macOS Terminal from specific folder","title":"RADseq Genomics in R","text":"System Preferences choose Keyboard -> Shortcuts. left panel, choose Services. right panel, Files Folders, choose New Terminal Folder /New Terminal Tab Folder. Now can right-click track pad mouse folder choose Services -> New Terminal Folder!","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/rad_genomics_computer_setup.html","id":"shortcut-to-folder-path","dir":"Articles","previous_headings":"Useful","what":"Shortcut to folder path","title":"RADseq Genomics in R","text":"macOS, open Automator application.  Go Finder, select folder right click see ‘copy path clipboard’ bottom Services.","code":"File -> New (cmd-N) Choose: Services Left panel, choose: Library -> Utilities Middle, choose: Copy to Clipboard and drag it to the right panel Now you want to have: Service receives selected FILES OR FOLDERS in FINDER> You should have something similar to the image below: Save (cmd-S) or File -> Save service as: copy path to clipboard"},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"coding-style","dir":"Articles","previous_headings":"","what":"Coding style","title":"Using standart to inspect your reduced genome sequences","text":"standart trying hard follow tidyverse style guide. Inside stardart, using parallel execution always use argument: parallel.core.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"dependencies","dir":"Articles","previous_headings":"Coding style","what":"Dependencies","title":"Using standart to inspect your reduced genome sequences","text":"Make sure latest R RStudio version installing stardart. package radiator nice vignette . Install stardart following instructions.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"quality-control","dir":"Articles","previous_headings":"Coding style","what":"Quality control","title":"Using standart to inspect your reduced genome sequences","text":"highly recommend running sequencing files (entire lane chip) software dedicated QC. bad sequencing, need go pipeline… FastQC. fastqcr R alternative.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"reads-length","dir":"Articles","previous_headings":"Coding style > Quality control","what":"reads length","title":"Using standart to inspect your reduced genome sequences","text":"using Illumina sequencing, chances 100 pb reads (SE RADseq). Ion Torrent, size highly variable determine optimal size cut reads length, pipeline using assembly requires . Note pipeline performs de novo assembly works better uniform read length. output FastQC FastQC output read length distribution. ’s difficult know many markers get depending read size. see relationship position nucleotide read overall quality. helpful determine want cut Illumina reads 80 90 pb. FastQC figure typical Ion Torrent sequencing chip sequence length distribution: Use standart figure generated standart shows number reads get depending maximum size threshold selected:  function : can use individual file entire chip lane. Function documentation: ?standart::reads_length_distribution Remember depending types file (individual entire lane/chip: Barcodes adapters might relationship observed figure. ’s uncommon see increasing adapters present increasing read size. Repetitive sequences, unique reads might impact results (see noise section ).","code":"size <- standart::reads_length_distribution(   fq.file = \"my-fastq.fastq.gz\",    with.future = TRUE,    parallel.core = 12L   )"},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"noise","dir":"Articles","previous_headings":"Coding style","what":"Noise reduction","title":"Using standart to inspect your reduced genome sequences","text":"Reducing noise individual FQ file really help speeding analysis. use 200 samples. Nothing new : Daniel Ilut explains pipeline (Ilut et al. 2014) function basically R… Jon Puritz’s dDocent data reduction step similar example. Praveen’s pipeline RADProc (Ravindran et al. 2019) use something similar. Metagenomic analysis pipeline step denoising data.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"visualization","dir":"Articles","previous_headings":"Coding style > Noise reduction","what":"Visualization","title":"Using standart to inspect your reduced genome sequences","text":"prefer Daniel Ilut way visualizing information. function stardart::read_depth_plot requires 1 FQ file (stacks process_radtags stackr::run_process_radtags) fast run. highlight read coverage groups distinct reads within sample. say distinct reads, reads exactly , mismatches. distinct reads putative allele.  4 read coverage groups shown: distinct reads low coverage (red):  reads likely sequencing errors uninformative polymorphisms (shared samples). disting reads target coverage (green): Usually represent around 80% reads FQ file. ’s safe coverage range start exploring data (open discussion). Lower threshold (default = 7): go low maybe 3 ? can’t escape , ’s tolerance call heterozygote true heterozygote. want minimum coverage reference alternative allele. Yes, can use population information lower threshold use fancy bayesian algorithm. Higher threshold: lot open discussion, ’s lower limit another group (orange, see description). Minus 1 bp. distinct reads high coverage > 1 read depth (yellow):  legitimate alleles high coverage. distinct unique reads high coverage (orange):  ’ll find paralogous sequences, transposable elements high copy number variants. run data: function generate plot shown write figure working directory, using sample name: -fq_hap_read_depth.png.","code":"read.plot <- standart::read_depth_plot(   fq.file = \"my-fq.fq.gz\",   min.coverage.fig = 7L, #default   parallel.core = parallel::detectCores() - 1 #default )"},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"faq","dir":"Articles","previous_headings":"Coding style > Noise reduction","what":"FAQ","title":"Using standart to inspect your reduced genome sequences","text":"run function samples ? Please don’t. use running entire dataset. ’s going fairly . Run couple samples. Based number reads (distribution), choose 1 sample: average, average average compare look figures produced.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"filtering","dir":"Articles","previous_headings":"Coding style > Noise reduction","what":"Filtering ?","title":"Using standart to inspect your reduced genome sequences","text":"Removing noise FQ files, ’s usually hot topic… Personally, less better ’s definitely case small projects. don’t think noise problem pipline like stacks. large projects, ’s something else, certainly huge bottleneck. generate de novo assembly 2000 samples generate catalog noise, cleaning data can represent weeks computation time shave project! test: 1. Clean FQ file Use sample just used read coverage groups, , clean standart::clean_fq. ’s fast run: generate: 2. Run de novo assembly pipeline Run de novo assembly pipeline (e.g. stacks stackr next step : mismatch threshold series (using stackr::run_ustacks). , use raw clean FQ files compare output… projects, less reads (cleaned FQ file) means: faster de novo assemblies (’ve seen 3 times faster). higher coverage de novo assembly steps stacks less repetitive stacks blacklisted lower number locus assembly artifacts (lors SNPs/locus, etc) similar heterozygosity homozygosity proportions mismathches plots almost always identical: showing can use Mismatch threshold (-M stacks ustacks) cleaned raw FQ files. faster catalog generation time, stacks cstacks stackr::run_cstacks step. DIFFERENCES downstream analysis (population structure, outlier detection, Fst, assignment, closekin). keep blacklisted sequences (fasta file) ? use Biostrings::countPattern function look TE sequences;) 3. Filtering entire dataset see big difference convince filtering way go, can easily piece code: Transfer cleaned files raw ones separate folder/sub-folder keep things tidy.","code":"clean.fq.name <- standart::clean_fq(   fq.file = \"my-fq.fq.gz\",    min.coverage.threshold = 2,    remove.unique.reads = TRUE, #default   write.blacklist.fasta = TRUE,   write.blacklist = FALSE, #default   parallel.core = parallel::detectCores() - 1, #default   verbose = TRUE #default   ) my-fq_cleaned.fq.gz # the cleaned fq file my-fq_blacklisted_reads.fasta.gz # a fasta file with blacklisted sequences... fq.to.clean <- list.files(path = \"04_process_radtags/\") names(fq.to.clean) <- fq.to.clean  clean.all <- purrr::map_df(   .x = fq.to.clean,    .f = standart::clean_fq,   min.coverage.threshold = 5,    remove.unique.reads = TRUE, #default   write.blacklist.fasta = TRUE,   write.blacklist = FALSE, #default   parallel.core = 12 )"},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"normalization","dir":"Articles","previous_headings":"Coding style","what":"Data normalization","title":"Using standart to inspect your reduced genome sequences","text":"Another hot topic, debate… stacks step called process_radtags, stackr run_process_radtags, looking distribution number reads per sample, might getting one distribution:  ideal world, want uniform distribution. translate good field wet-lab techniques: tissue sampling preservation extraction (robots ?) pipetting DNA quantification required techniques resulted similar sequenced information samples. ’re compare apples apples. :) skewed (left right) normal distribution, ’ll comparing apples … citrus. samples lower reads less loci usually less heterozygous loci. Similarly, samples higher number reads loci, heterozygous loci. ’s likely cause ? student prior wet-lab experience DNA extraction downstream step (e.g. library prep) data preservation issues: historical DNA, fragmented DNA, etc. skipping DNA quantification library QC steps Ok, ’s problem ? Potentially problems: ascertainment bias drive populations polymorphism discovery bias missing data patterns individual heterozygosity problems patterns downstream analysis impacted differences samples: artifactual biological ? Solutions ?","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"wet-lab-normalization","dir":"Articles","previous_headings":"Coding style > Data normalization","what":"1. Wet-lab normalization","title":"Using standart to inspect your reduced genome sequences","text":"basic steps: sequence samples look stats ’ve discussed go back wet-lab prepare new plate sequence pool lanes/chips look sequencing statistics repeat step continue pipeline ’m fan: Way many wet-lab steps. wet-lab important part. Everything gets exacerbated RADseq. ’m favor pooling lanes chips (day!). ’s really like working microsatelites.","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"bio-informatic-normalization","dir":"Articles","previous_headings":"Coding style > Data normalization","what":"2. Bio-informatic normalization","title":"Using standart to inspect your reduced genome sequences","text":"right start impossible, prefer normalization de demultiplexing step… example stackr::run_process_radtags. prerequisite enough sequencing material (reads) samples. tool? standart::normalize_reads function. Rarefaction fasq files sub-sampling reads de novo assembly alignment new: Community biodiversity ecologists well aware species accumulation curves obtained rarefaction (Sanders, 1968). rarefaction method guarantees samples weight analysis. Metagenomics community analyzing alpha diversity deal differing sample depth given diversity statistic using rarefaction. means taking random subset given size original sample (see mothur, Schloss et al. 2009). Molecular ecologists reasons, RADseq enthusiasts seems unaware concept, see (Hale et al. 2009; Kalinowski, 2004 Puncher et al. 2018). Keywords: rarefaction, sub-sampling, normalization, standardization, sample size correction. steps ? goal reduce variance number reads samples rarefaction/normalization conducted aon fq file stacks process_radtags removing noise. normalized replicates generated function randomly selecting reads (without replacement) samples choose number replicates (default: 3) manage replicates like replicates might (want replicates…). Read function documentation look example observations using rarefaction: replicates similar mismathches plots: showing can use Mismatch threshold (-M stacks ustacks) rarefied samples. better de novo assembly statistics individual population heterozygosity real biological signal, rarefaction doesn’t impact downstream analysis. heterozygosity driven sequencing bias, bioinformatic rarefaction took care problem.","code":"# To run this function, bioconductor's ShortRead package is necessary: BiocManager::install(\"ShortRead\")  # using defaults: standart::normalize_reads(path.samples = \"~/corals\")  # customizing the function: standart::normalize_reads(    project.info = \"project.info.corals.tsv\",    path.samples = \"04_process_radtags\",    sample.reads = 2000000,    number.replicates = 3,    random.seed = 3,    parallel.core = 12    )"},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"faq-1","dir":"Articles","previous_headings":"Coding style > Data normalization > 2. Bio-informatic normalization","what":"FAQ","title":"Using standart to inspect your reduced genome sequences","text":"doesn’t bother throw away valuable information samples high read numbers ? Absolutely ! information already lost: used stacks generate catalog filtered data keep markers x individuals /sampling sites/populations. step ’s either loose markers get missing data… ’s loss information information confirmed samples: ’s statistic problem ecologists well aware . loss reads intrinsic RADseq:  Don’t believe , inspect stacks, stackr RADseq pipeline log files… Rarefaction just another step, molecular ecologists used . check total read depth 1 sample bioinformatic steps. Compare numbers actual read number start pipeline. > 30% lucky!","code":""},{"path":"https://thierrygosselin.github.io/standart/articles/using_standart.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Using standart to inspect your reduced genome sequences","text":"Ilut, D., Nydam, M., Hare, M. (2014). Defining Loci Restriction-Based Reduced Representation Genomic Data Non model Species: Sources Bias Diagnostics Optimal Clustering BioMed Research International 2014(2), 1 9. https://dx.doi.org/10.1155/2014/675158 Rochette, N., Rivera‐Colón, ., Catchen, J. (2019). Stacks 2: Analytical methods paired‐end sequencing improve RADseq‐based population genomics. Molecular Ecology https://dx.doi.org/10.1111/mec.15253 Harvey, M., Judy, C., Seeholzer, G., Maley, J. (2015). Similarity thresholds used short read assembly reduce comparability population histories across species PeerJ 3(), e895. https://dx.doi.org/10.7717/peerj.895 Ravindran, P., Bentzen, P., Bradbury, ., Beiko, R. (2019). RADProc: computationally efficient de novo locus assembler population studies using RADseq data Molecular Ecology Resources 19(1), 272-282. https://dx.doi.org/10.1111/1755-0998.12954 Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software describing comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41. Sanders HL (1968) Marine benthic diversity: comparative study. American Naturalist 102: pp. 243–282 Hale et al. (2009) relative merits normalization rarefaction gene discovery sturgeons. BMC genomics, 10, 203. Kalinowski (2004) Counting Alleles Rarefaction. Conservation Genetics, 5, 539–543. Puncher et al. (2018) Molecular Ecology Resources, 44, 678.","code":""},{"path":"https://thierrygosselin.github.io/standart/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thierry Gosselin. Author, maintainer.","code":""},{"path":"https://thierrygosselin.github.io/standart/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gosselin T (2025). standart: standart: solves common challenges genome reduction sequences quality control. R package version 0.0.0.1, https://thierrygosselin.github.io/standart/.","code":"@Manual{,   title = {standart: standart: solves the most common challenges of genome reduction sequences quality control},   author = {Thierry Gosselin},   year = {2025},   note = {R package version 0.0.0.1},   url = {https://thierrygosselin.github.io/standart/}, }"},{"path":"https://thierrygosselin.github.io/standart/index.html","id":"standart-","dir":"","previous_headings":"","what":"standart: solves the most common challenges of genome reduction sequences quality control","title":"standart: solves the most common challenges of genome reduction sequences quality control","text":"standart provides R functions help solve common quality control challenges genome reduction sequences (DArT, RADseq, GBS, etc). standart really shines projects requires consistency among sequencing runs samples animals large complicated genomes.","code":""},{"path":"https://thierrygosselin.github.io/standart/index.html","id":"who-is-it-for-","dir":"","previous_headings":"","what":"Who is it for ?","title":"standart: solves the most common challenges of genome reduction sequences quality control","text":"package currently developed projects CSIRO.","code":""},{"path":"https://thierrygosselin.github.io/standart/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"standart: solves the most common challenges of genome reduction sequences quality control","text":"can install development version standart like :","code":"if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"thierrygosselin/standart\") library(standart)"},{"path":"https://thierrygosselin.github.io/standart/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"standart: solves the most common challenges of genome reduction sequences quality control","text":"Reads/sequences counter length distribution. Read depth plot highlights read coverage groups. Distinct unique reads high coverage repetitive elements assembled locus usually paralogs, retrotransposons, transposable elements, etc. Noise reduction fastq cleaning. Data normalization/rarefaction remove reduce ascertainment bias driving populations polymorphism discovery bias, missing data patterns, individual heterozygosity problems patterns. Noise reduction normalization help answer question: differences samples: artifactual biological.","code":""},{"path":"https://thierrygosselin.github.io/standart/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"standart: solves the most common challenges of genome reduction sequences quality control","text":"Vignettes Computer setup troubleshooting github packages help RAD/DArTseq analysis","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/Exposition_pipe_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposition pipe-operator — %$%","title":"Exposition pipe-operator — %$%","text":"magrittr Exposition pipe-operator","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/Exposition_pipe_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposition pipe-operator — %$%","text":"","code":"lhs %$% rhs"},{"path":"https://thierrygosselin.github.io/standart/reference/check_fq.html","id":null,"dir":"Reference","previous_headings":"","what":"check_fq — check_fq","title":"check_fq — check_fq","text":"Check weird fq UPPER CASE ending used","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/check_fq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_fq — check_fq","text":"","code":"check_fq(fq.files, parallel.core = parallel::detectCores() - 1)"},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the noise of an individual fastq file — clean_fq","title":"Removes the noise of an individual fastq file — clean_fq","text":"function reads fastq file individual clean removing: unique reads high coverage (likely paralogs TE) distinct reads low coverage","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the noise of an individual fastq file — clean_fq","text":"","code":"clean_fq(   fq.files,   paired.end = FALSE,   min.coverage.threshold = 2L,   max.coverage.threshold = \"high.coverage.unique.reads\",   remove.unique.reads = TRUE,   write.blacklist = TRUE,   write.blacklist.fasta = TRUE,   compress = FALSE,   output = \"08_stacks_results/03_cleaned_fq\",   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes the noise of an individual fastq file — clean_fq","text":"fq.files (character, path). path individual fastq file check. Default: fq.files = \"-sample.fq.gz\". paired.end (logical) files paired-end. Default: paired.end = FALSE. min.coverage.threshold (integer). Minimum coverage threshold. function remove distinct reads coverage <= threshold. turn , min.coverage.threshold = NULL 0L. Default: min.coverage.threshold = 2L. max.coverage.threshold (integer, character). Maximum coverage threshold. function remove distinct reads coverage >= threshold. turn , max.coverage.threshold = NULL. default, use starting depth high coverage unique reads observed. Default: max.coverage.threshold = \"high.coverage.unique.reads\". remove.unique.reads (logical). Remove distinct unique reads high coverage. Likely paralogs Transposable elements. Default: remove.unique.reads = TRUE. write.blacklist (logical). Write blacklisted reads file. Default: write.blacklist = TRUE. write.blacklist.fasta (logical). Write blacklisted reads fasta file. Default: write.blacklist.fasta = TRUE. compress (logical) compress output files. disk space, compress, way faster way write. Default: compress = FALSE. output (character, path) Write cleaned fq files specific directory. Default: output = \"08_stacks_results/03_cleaned_fq\". parallel.core (integer) Enable parallel execution number threads. Default: parallel.core = parallel::detectCores() - 1.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the noise of an individual fastq file — clean_fq","text":"function returns cleaned fq file name sample -C appended filename.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Removes the noise of an individual fastq file — clean_fq","text":"coming soon, just try meantime...","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes the noise of an individual fastq file — clean_fq","text":"","code":"if (FALSE) { # \\dontrun{ require(vroom)  # for one sample clean.id <- standart::clean_fq(   fq.files = \"my-sample.fq.gz\",   min.coverage.threshold = 7L,   max.coverage.threshold = \"high.coverage.unique.reads\"   ) # for multiple samples in parallel # require(progressr) # to get a progress bar   #progressr::with_progress(   # clean <- standart::clean_fq(    #  fq.files = 04_process_radtags,     # min.coverage.threshold = 2L,      #max.coverage.threshold = \"high.coverage.unique.reads\",      #write.blacklist = TRUE,      #write.blacklist.fasta = TRUE,      #compress = FALSE  #)  #) } # }"},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"clean_fq_filename — clean_fq_filename","title":"clean_fq_filename — clean_fq_filename","text":"Removes last part fq filename","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/clean_fq_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean_fq_filename — clean_fq_filename","text":"","code":"clean_fq_filename(x)"},{"path":"https://thierrygosselin.github.io/standart/reference/compound_assignment_pipe_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"compound assignment pipe operator — %<>%","title":"compound assignment pipe operator — %<>%","text":"magrittr compound assignment pipe operator","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/compound_assignment_pipe_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compound assignment pipe operator — %<>%","text":"","code":"lhs %<>% rhs"},{"path":"https://thierrygosselin.github.io/standart/reference/fq_file_type.html","id":null,"dir":"Reference","previous_headings":"","what":"fq_file_type — fq_file_type","title":"fq_file_type — fq_file_type","text":"Detect fq file type","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/fq_file_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fq_file_type — fq_file_type","text":"","code":"fq_file_type(x)"},{"path":"https://thierrygosselin.github.io/standart/reference/list_sample_file.html","id":null,"dir":"Reference","previous_headings":"","what":"list_sample_file — list_sample_file","title":"list_sample_file — list_sample_file","text":"List sample file folder","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/list_sample_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list_sample_file — list_sample_file","text":"","code":"list_sample_file(f, full.path = FALSE, recursive = FALSE, paired.end = FALSE)"},{"path":"https://thierrygosselin.github.io/standart/reference/n.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of observations in the current group. — n","title":"The number of observations in the current group. — n","text":"Check dplyr","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of observations in the current group. — n","text":"","code":"n()"},{"path":"https://thierrygosselin.github.io/standart/reference/normalize_reads.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefaction of reads samples — normalize_reads","title":"Rarefaction of reads samples — normalize_reads","text":"Rarefaction fasq files sub-sampling reads de novo assembly alignment. normalization/standardization/sample size correction step allows check statistics increasing read numbers (e.g. heterozygous markers). easy way disentangle artifact biological signal caused varying read numbers across samples.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/normalize_reads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefaction of reads samples — normalize_reads","text":"","code":"normalize_reads(   project.info = NULL,   fq.files,   sample.reads = 1e+06,   number.replicates = 3,   random.seed = NULL,   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/standart/reference/normalize_reads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefaction of reads samples — normalize_reads","text":"project.info (character, path, optional) using stackr pipeline, project info file created. file provides info stats generated stacks stackr. project info file updated new samples. project info filename appended _normalize. file end .tsv. project.info file provided, function look number reads fastq files take longer. Default: project.info = NULL. fq.files (character, path) Path folder containing samples normalize. sample.reads (integer) number reads pick randomly. Default: sample.reads = 1000000. number.replicates (interger) number samples generate. default, 20 samples folder, 100 new samples generated. Default: number.replicates = 5. random.seed (integer, optional) reproducibility, set integer used inside function requires randomness. default, random number generated printed appropriate output. Default: random.seed = NULL. parallel.core (optional) number core parallel programming. samples normalize sequentially treated replicates generated parallel. default, parallel.core = parallel::detectCores() - 1. number adjusted automatically number replicates.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/normalize_reads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefaction of reads samples — normalize_reads","text":"fastq files \"-1\", \"-2\", \"...\" appended original name. project info file provided, new replicate samples info integrated file. modified project info file _normalize appended original filename.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/normalize_reads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefaction of reads samples — normalize_reads","text":"","code":"if (FALSE) { # \\dontrun{ library(standart) # To run this function, bioconductor \\code{ShortRead} package is necessary: source(\"http://bioconductor.org/biocLite.R\") biocLite(\"ShortRead\") # Using OpenMP threads nthreads <- .Call(ShortRead:::.set_omp_threads, 1L) on.exit(.Call(ShortRead:::.set_omp_threads, nthreads)) # using defaults: standart::normalize_reads(fq.files = \"~/corals\")  # customizing the function: standart::normalize_reads(    project.info = \"project.info.corals.tsv\",    fq.files = \"~/corals\",    sample.reads = 2000000,    number.replicates = 5,    random.seed = 3,    parallel.core = 5)  # You then need to run stackr: run_ustacks, run_sstacks, run_tsv2bam, run_gstacks, run_populations # or equivalent if a reference genome. } # }"},{"path":"https://thierrygosselin.github.io/standart/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward-pipe operator — %>%","title":"Forward-pipe operator — %>%","text":"magrittr forward-pipe operator","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward-pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://thierrygosselin.github.io/standart/reference/read_count_one.html","id":null,"dir":"Reference","previous_headings":"","what":"read_count_one — read_count_one","title":"read_count_one — read_count_one","text":"count 1 fq file","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_count_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_count_one — read_count_one","text":"","code":"read_count_one(fq.files, verbose = FALSE, p = NULL)"},{"path":"https://thierrygosselin.github.io/standart/reference/read_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts the number of reads in samples — read_counter","title":"Counts the number of reads in samples — read_counter","text":"function counts number reads samples present specified folder. Useful info (e.g. generated stacks process_radtags), want check distribution number reads samples.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts the number of reads in samples — read_counter","text":"","code":"read_counter(   fq.files,   strata = NULL,   plot.reads = TRUE,   write = TRUE,   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/standart/reference/read_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts the number of reads in samples — read_counter","text":"fq.files (character, path) Path folder containing 1 samples count reads. strata (optional) strata file tab delimited file 2 columns headers: INDIVIDUALS STRATA. STRATA column can hierarchical grouping. create strata file see individuals2strata. already run stacks data, strata file similar stacks population map file, make sure required column names (INDIVIDUALS STRATA). Note: Make sure fastq file names (without extension) match INDIVIDUALS column strata file. default, figures generated without strata grouping. Default: strata = NULL. plot.reads default plot.reads = TRUE, distribution boxplot figures generated written directory. write default write = TRUE, data frame read counts figures written working directory. parallel.core (optional) number core parallel computing. default: parallel.core = parallel::detectCores() - 1.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts the number of reads in samples — read_counter","text":"list data frame sample id number reads. option generate figures selected, list also returns 2 figures (see example )","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_counter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts the number of reads in samples — read_counter","text":"","code":"if (FALSE) { # \\dontrun{ library(standart) # To run this function, bioconductor \\code{ShortRead} package is necessary: BiocManager::install(\"ShortRead\")  # with defaults read.info <- standart::read_counter(fq.files = \"corals\")  # to extract info from the list reads = read.info$reads reads.distribution <- read.info$reads.distribution reads.boxplot <- read.info$reads.boxplot  # If the default figures saved were not good, save with new width and height # the histogram ggplot2::ggsave( filename = \"reads.distribution.pdf\", plot = reads.distribution, width = 15, height = 15, dpi = 600, units = \"cm\", useDingbats = FALSE, limitsize = FALSE)  # the boxplot ggplot2::ggsave( filename = \"reads.boxplot.pdf\", plot = reads.boxplot, width = 15, height = 15, dpi = 600, units = \"cm\", useDingbats = FALSE, limitsize = FALSE) } # }"},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a figure with the read depth groups — read_depth_plot","title":"Generate a figure with the read depth groups — read_depth_plot","text":"function reads fastq file individual generate figure read coverage groups.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a figure with the read depth groups — read_depth_plot","text":"","code":"read_depth_plot(   fq.file,   min.coverage.fig = 7L,   output = \"read_depth_plot\",   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a figure with the read depth groups — read_depth_plot","text":"fq.file (character, path). path individual fastq file check. Default: fq.file = \"-sample.fq.gz\". min.coverage.fig (integer). Minimum coverage used draw color figure. Default: min.coverage.fig = 7L. output (character, path) figure saved. Default: \"read_depth_plot\". parallel.core (integer) Enable parallel execution number threads. Default: parallel.core = parallel::detectCores() - 1.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a figure with the read depth groups — read_depth_plot","text":"function returns read depth groups plot.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a figure with the read depth groups — read_depth_plot","text":"4 read coverage groups shown: distinct reads low coverage (red): reads likely sequencing errors uninformative polymorphisms (shared samples). disting reads target coverage (green): Usually represent around 80% reads FQ file. ’s safe coverage range start exploring data (open discussion). Lower threshold (default = 7): can’t escape , ’s tolerance call heterozygote true heterozygote. want minimum coverage reference alternative allele. Yes, can use population information lower threshold use fancy bayesian algorithm. Higher threshold: lot open discussion, ’s lower limit another group (orange, see description). Minus 1 bp. distinct reads high coverage > 1 read depth (yellow): legitimate alleles high coverage. distinct unique reads high coverage (orange): repetitive elements assembled locus usually paralogs, retrotransposons, transposable elements, etc.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a figure with the read depth groups — read_depth_plot","text":"Ilut, D., Nydam, M., Hare, M. (2014). Defining Loci Restriction-Based Reduced Representation Genomic Data Non model Species: Sources Bias Diagnostics Optimal Clustering BioMed Research International  2014. https://dx.doi.org/10.1155/2014/675158","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/read_depth_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a figure with the read depth groups — read_depth_plot","text":"","code":"if (FALSE) { # \\dontrun{ require(vroom) check.reads.depth.groups <- read_depth_plot(fq.file = \"my-sample.fq.gz\") } # }"},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the read length distribution of a fastq file — reads_length_distribution","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"function reads fastq file individual, lane chip generate read length distribution help decide threshold cut reads specific length.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"","code":"reads_length_distribution(   fq.file,   parallel.core = parallel::detectCores() - 1,   with.future = FALSE )"},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"fq.file (character, path). path fastq file (individal, lane chip). Default: fq.file = \"-sample.fq.gz\". parallel.core (integer) Enable parallel execution number threads. Default: parallel.core = parallel::detectCores() - 1. .future (logical) TRUE use future package run code parallel. Set parallel.core number physical, logical, cores. See example . Default: .future = FALSE.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"function returns plot tibble potential reads length thresholds associated number reads.","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"coming soon, just try meantime...","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/reads_length_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the read length distribution of a fastq file — reads_length_distribution","text":"","code":"if (FALSE) { # \\dontrun{ require(ShortRead) reads.length.info <- standart::reads_length_distribution(   fq.file = \"my-sample.fq.gz\")   # with future package to get faster results:  require(future)  require(listenv)  reads.length.info <- standart::reads_length_distribution(   fq.file = \"my-sample.fq.gz\",   with.future = TRUE   ) } # }"},{"path":"https://thierrygosselin.github.io/standart/reference/standart_future.html","id":null,"dir":"Reference","previous_headings":"","what":"radiator parallel function — standart_future","title":"radiator parallel function — standart_future","text":"Updating radiator use future","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/standart_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"radiator parallel function — standart_future","text":"","code":"standart_future(   .x,   .f,   flat.future = c(\"int\", \"chr\", \"dfr\", \"dfc\", \"walk\", \"drop\"),   split.vec = FALSE,   split.with = NULL,   split.chunks = 4L,   parallel.core = parallel::detectCores() - 1,   forking = FALSE,   ... )"},{"path":"https://thierrygosselin.github.io/standart/reference/standart_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"standart_normalize — standart_normalize","title":"standart_normalize — standart_normalize","text":"main normalize function","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/standart_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standart_normalize — standart_normalize","text":"","code":"standart_normalize(   fq.to.normalize,   count.reads = FALSE,   number.replicates,   sample.reads,   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/standart/reference/stats_standart.html","id":null,"dir":"Reference","previous_headings":"","what":"stats_standart — stats_standart","title":"stats_standart — stats_standart","text":"Generate useful stats","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/stats_standart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stats_standart — stats_standart","text":"","code":"stats_standart(data, x, group.by = NULL, digits = NULL)"},{"path":"https://thierrygosselin.github.io/standart/reference/write_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"write_normalize — write_normalize","title":"write_normalize — write_normalize","text":"Write normalize fastq file","code":""},{"path":"https://thierrygosselin.github.io/standart/reference/write_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_normalize — write_normalize","text":"","code":"write_normalize(   number.replicates,   subsample.random,   fq.to.normalize,   sample.reads )"},{"path":"https://thierrygosselin.github.io/standart/news/index.html","id":"standart-0001-2025-03-24","dir":"Changelog","previous_headings":"","what":"standart 0.0.0.1 2025-03-24","title":"standart 0.0.0.1 2025-03-24","text":"standart R package creation","code":""}]
